{"version":3,"sources":["config.js","RomLibrary.js","ListPage.js","ControlMapperRow.js","ControlsModal.js","FrameTimer.js","GamepadController.js","KeyboardController.js","Screen.js","utils.js","Speakers.js","Emulator.js","RunPage.js","App.js","index.js"],"names":["config","ROMS","1942","name","url","mario","owlia","nomolos","croom","lj65","GOOGLE_ANALYTICS_CODE","process","REACT_APP_GOOGLE_ANALYTICS_CODE","SENTRY_URI","REACT_APP_SENTRY_URI","RomLibrary","getRomInfoByHash","hash","this","load","find","rom","save","file","Promise","resolve","reject","reader","FileReader","onload","readAsBinaryString","pFileReader","then","readFile","byteString","target","result","ab","ArrayBuffer","length","ia","Uint8Array","i","charCodeAt","crypto","subtle","digest","buffer","Array","from","map","b","toString","padStart","join","hashFile","savedRomInfo","localStorage","getItem","existingLibrary","JSON","parse","added","Date","now","newRomInfo","stringify","concat","setItem","delete","removeItem","filter","ListPage","Component","constructor","props","super","deleteRom","updateLibrary","setState","romLibrary","handleDragOver","e","preventDefault","dataTransfer","dropEffect","handleDrop","items","getAsFile","files","history","push","pathname","state","render","className","onDragOver","onDrop","ListGroup","Object","keys","sort","key","to","encodeURIComponent","a","onClick","title","ControlMapperRow","playerOneButton","playerTwoButton","waitingForKey","handleClick","bind","componentDidMount","button","playerButtons","console","log","componentDidUpdate","prevProps","prevState","gamepadButton","newButton","searchButton","gamepadConfig","buttonId","buttons","searchNewButton","prevGamepadConfig","some","b2","waitingForKeyPlayer","gamepadButtonName","type","code","value","playerGamepadId","configs","prevButton","newState","currentPromptButton","player","buttonName","GAMEPAD_ICON","ControlsModal","undefined","modified","handleKeyDown","handleGamepadButtonDown","listenForKey","controllerIcon","gamepadId","controllerIconAlt","componentWillUnmount","setKeys","setGamepadConfig","removeKeyListener","promptButton","document","addEventListener","buttonInfo","playerId","slice","newConfig","assign","event","newKeys","keyCode","String","toUpperCase","removeEventListener","Modal","isOpen","toggle","ModalHeader","ModalBody","Table","src","alt","Controller","BUTTON_LEFT","BUTTON_SELECT","BUTTON_RIGHT","BUTTON_UP","BUTTON_DOWN","BUTTON_A","BUTTON_B","BUTTON_START","ModalFooter","Button","outline","color","FrameTimer","onAnimationFrame","time","requestAnimationFrame","excess","interval","newFrameTime","lastFrameTime","numFrames","Math","round","generateFrame","onWriteFrame","timeToNextFrame","setTimeout","onGenerateFrame","running","start","stop","_requestID","window","cancelAnimationFrame","GamepadController","options","disableIfGamepadEnabled","callback","self","_getPlayerNumberFromGamepad","gamepad","id","poll","gamepads","navigator","getGamepads","webkitGetGamepads","usedPlayers","gamepadIndex","previousGamepad","gamepadState","previousButtons","buttonCallback","axes","axis","previousAxis","previousButton","pressed","playerNumber","indexOf","configButtons","configButton","onButtonDown","onButtonUp","f","loadGamepadConfig","startPolling","stopped","loop","KEYS","75","74","70","72","87","83","65","68","13","99","97","98","38","40","37","39","KeyboardController","loadKeys","handleKeyUp","handleKeyPress","Screen","setBuffer","y","x","buf32","writeBuffer","imageData","data","set","buf8","context","putImageData","fitInParent","parent","canvas","parentNode","parentWidth","clientWidth","parentHeight","clientHeight","style","width","height","handleMouseDown","onMouseDown","scale","parseFloat","rect","getBoundingClientRect","clientX","left","clientY","top","onMouseUp","ref","initCanvas","getContext","getImageData","fillStyle","fillRect","buf","Uint8ClampedArray","Uint32Array","screenshot","img","Image","toDataURL","handleError","error","errorInfo","Raven","captureException","extra","Speakers","onBufferUnderrun","writeSample","right","size","bufferSize","deqN","enq","onaudioprocess","outputBuffer","getChannelData","samples","j","RingBuffer","getSampleRate","AudioContext","myCtx","sampleRate","close","audioCtx","scriptNode","createScriptProcessor","connect","destination","disconnect","catch","Emulator","frameTimer","speakers","fpsInterval","setInterval","nes","getFPS","clearInterval","screen","frame","zapperMove","zapperFireDown","zapperFireUp","actualSize","desiredSize","paused","NES","onFrame","onStatusUpdate","onAudioSample","wrap","gamepadController","buttonDown","buttonUp","gamepadPolling","keyboardController","loadROM","romData","RunPage","match","params","slug","isLocalROM","test","romHash","split","romInfo","romName","localROMData","handleLoaded","description","currentRequest","path","handleProgress","req","XMLHttpRequest","open","overrideMimeType","status","responseText","Error","statusText","onerror","onprogress","send","loadBinary","err","message","location","lengthComputable","loadedPercent","loaded","total","loading","handlePauseResume","layout","navbarHeight","getComputedStyle","navbar","screenContainer","innerHeight","emulator","toggleControlsModal","controlsModalOpen","el","disabled","Progress","position","abort","App","recordPageview","GoogleAnalytics","pageview","initialize","exact","component","componentDidCatch","install","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.e0df947c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst config = {\r\n  ROMS: {\r\n    1942: {\r\n      name: \"1942\",\r\n      url: \"/roms/classic/1942.nes\"\r\n    },\r\n    mario: {\r\n      name: \"超级玛丽\",\r\n      url: \"https://lab.ur1.fun/FCGames/roms/classic/mario.nes\"\r\n    },\r\n    owlia: {\r\n      name: \"奥薇利亚传奇\",\r\n      url: \"https://cdn.jsdelivr.net/gh/bfirsh/jsnes-roms@master/owlia.nes\"\r\n    },\r\n    nomolos: {\r\n      name: \"Nomolos: Storming the Catsle\",\r\n      url: \"https://cdn.jsdelivr.net/gh/bfirsh/jsnes-roms@master/nomolos.nes\"\r\n    },\r\n    croom: {\r\n      name: \"Concentration Room\",\r\n      url: \"https://cdn.jsdelivr.net/gh/bfirsh/jsnes-roms@master/croom/croom.nes\"\r\n    },\r\n    lj65: {\r\n      name: \"LJ65\",\r\n      url: \"https://cdn.jsdelivr.net/gh/bfirsh/jsnes-roms@master/lj65/lj65.nes\"\r\n    }\r\n  },\r\n  GOOGLE_ANALYTICS_CODE: process.env.REACT_APP_GOOGLE_ANALYTICS_CODE,\r\n  SENTRY_URI: process.env.REACT_APP_SENTRY_URI\r\n};\r\n\r\nexport default config;\r\n","const pFileReader = function(file) {\r\n  return new Promise((resolve, reject) => {\r\n    var reader = new FileReader();\r\n    reader.onload = resolve;\r\n    reader.readAsBinaryString(file);\r\n  });\r\n};\r\n\r\nconst hashFile = function(byteString) {\r\n  const asHex = buffer => {\r\n    return Array.from(new Uint8Array(buffer))\r\n      .map(b => b.toString(16).padStart(2, \"0\"))\r\n      .join(\"\");\r\n  };\r\n\r\n  const ab = new ArrayBuffer(byteString.length);\r\n  var ia = new Uint8Array(ab);\r\n\r\n  for (var i = 0; i < byteString.length; i++) {\r\n    ia[i] = byteString.charCodeAt(i);\r\n  }\r\n\r\n  return crypto.subtle.digest(\"SHA-1\", ab).then(asHex);\r\n};\r\n\r\nconst RomLibrary = {\r\n  getRomInfoByHash: function(hash) {\r\n    return this.load().find(rom => rom.hash === hash);\r\n  },\r\n  save: function(file) {\r\n    return pFileReader(file)\r\n      .then(function(readFile) {\r\n        const byteString = readFile.target.result;\r\n        return hashFile(byteString).then(hash => {\r\n          return { hash, byteString };\r\n        });\r\n      })\r\n      .then(({ hash, byteString }) => {\r\n        const savedRomInfo = localStorage.getItem(\"savedRomInfo\");\r\n        const existingLibrary = savedRomInfo ? JSON.parse(savedRomInfo) : [];\r\n\r\n        const rom = {\r\n          name: file.name,\r\n          hash: hash,\r\n          added: Date.now()\r\n        };\r\n\r\n        const newRomInfo = JSON.stringify(existingLibrary.concat([rom]));\r\n\r\n        localStorage.setItem(\"savedRomInfo\", newRomInfo);\r\n        localStorage.setItem(\"blob-\" + hash, byteString);\r\n\r\n        return rom;\r\n      });\r\n  },\r\n  load: function() {\r\n    const localData = localStorage.getItem(\"savedRomInfo\");\r\n    if (!localData) return [];\r\n    const savedRomInfo = JSON.parse(localStorage.getItem(\"savedRomInfo\"));\r\n    return savedRomInfo || [];\r\n  },\r\n  delete: function(hash) {\r\n    const existingLibrary = this.load();\r\n    localStorage.removeItem(\"blob-\" + hash);\r\n    localStorage.setItem(\r\n      \"savedRomInfo\",\r\n      JSON.stringify(existingLibrary.filter(rom => rom.hash !== hash))\r\n    );\r\n  }\r\n};\r\n\r\nexport default RomLibrary;\r\n","import React, { Component } from \"react\";\r\nimport \"./ListPage.css\";\r\nimport { ListGroup } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport config from \"./config\";\r\n\r\nimport RomLibrary from \"./RomLibrary\";\r\n\r\nclass ListPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      romLibrary: RomLibrary.load()\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"drop-zone\"\r\n        onDragOver={this.handleDragOver}\r\n        onDrop={this.handleDrop}\r\n      >\r\n        <div className=\"container ListPage py-4\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-md-8\">\r\n              <header className=\"mb-4\">\r\n                <h1 className=\"mb-3\">FC 游戏在线玩</h1>\r\n              </header>\r\n\r\n              <ListGroup className=\"mb-4\">\r\n                {Object.keys(config.ROMS)\r\n                  .sort()\r\n                  .map(key => (\r\n                    <Link\r\n                      key={key}\r\n                      to={\"/run/\" + encodeURIComponent(key)}\r\n                      className=\"list-group-item\"\r\n                    >\r\n                      {config.ROMS[key][\"name\"]}\r\n                      <span className=\"float-right\">&rsaquo;</span>\r\n                    </Link>\r\n                  ))}\r\n              </ListGroup>\r\n\r\n              <p>\r\n                没找到喜欢的游戏？直接将游戏 NES ROM 拖动到本页面即可在线运行\r\n              </p>\r\n\r\n              {this.state.romLibrary.length > 0 ? (\r\n                <div>\r\n                  <p>最近运行:</p>\r\n\r\n                  <ListGroup className=\"mb-4\">\r\n                    {this.state.romLibrary\r\n                      .sort((a, b) => new Date(b.added) - new Date(a.added))\r\n                      .map(rom => (\r\n                        <Link\r\n                          key={rom.hash}\r\n                          to={\"run/local-\" + rom.hash}\r\n                          className=\"list-group-item\"\r\n                        >\r\n                          {rom.name}\r\n                          <span\r\n                            onClick={e => {\r\n                              e.preventDefault();\r\n                              this.deleteRom(rom.hash);\r\n                            }}\r\n                            className=\"delete\"\r\n                            title=\"Delete\"\r\n                          >\r\n                            &times;\r\n                          </span>\r\n                          <span className=\"float-right\">&rsaquo;</span>\r\n                        </Link>\r\n                      ))}\r\n                  </ListGroup>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  deleteRom = hash => {\r\n    RomLibrary.delete(hash);\r\n    this.updateLibrary();\r\n  };\r\n\r\n  updateLibrary = () => {\r\n    this.setState({ romLibrary: RomLibrary.load() });\r\n  };\r\n\r\n  handleDragOver = e => {\r\n    e.preventDefault();\r\n    e.dataTransfer.dropEffect = \"copy\";\r\n  };\r\n\r\n  handleDrop = e => {\r\n    e.preventDefault();\r\n\r\n    const file = e.dataTransfer.items\r\n      ? e.dataTransfer.items[0].getAsFile()\r\n      : e.dataTransfer.files[0];\r\n\r\n    RomLibrary.save(file).then(rom => {\r\n      this.updateLibrary();\r\n      this.props.history.push({ pathname: \"run/local-\" + rom.hash });\r\n    });\r\n  };\r\n}\r\n\r\nexport default ListPage;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ControlMapperRow extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      playerOneButton: \"\",\r\n      playerTwoButton: \"\",\r\n      waitingForKey: 0\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    var keys = this.props.keys;\r\n    var button = this.props.button;\r\n    var playerButtons = [];\r\n    for (var key in keys) {\r\n      if (keys[key][0] === 1 && keys[key][1] === button) {\r\n        playerButtons[0] = keys[key][2];\r\n        console.log(playerButtons[0]);\r\n      } else if (keys[key][0] === 2 && keys[key][1] === button) {\r\n        playerButtons[1] = keys[key][2];\r\n      }\r\n    }\r\n    this.setState({\r\n      playerOneButton: playerButtons[0],\r\n      playerTwoButton: playerButtons[1]\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    var keys = this.props.keys;\r\n    var button = this.props.button;\r\n    var playerButtons = [];\r\n    var gamepadButton;\r\n    var newButton;\r\n\r\n    for (var key in keys) {\r\n      if (keys[key][0] === 1 && keys[key][1] === button) {\r\n        playerButtons[0] = keys[key][2];\r\n        console.log(playerButtons[0]);\r\n      } else if (keys[key][0] === 2 && keys[key][1] === button) {\r\n        playerButtons[1] = keys[key][2];\r\n      }\r\n    }\r\n\r\n    var searchButton = (gamepadConfig, buttonId) => {\r\n      return gamepadConfig.buttons.filter(b => b.buttonId === buttonId)[0];\r\n    };\r\n\r\n    var searchNewButton = (prevGamepadConfig, gamepadConfig) => {\r\n      return gamepadConfig.buttons.filter(b => {\r\n        return (\r\n          !prevGamepadConfig ||\r\n          !prevGamepadConfig.buttons.some(b2 => b2.buttonId === b.buttonId)\r\n        );\r\n      })[0];\r\n    };\r\n\r\n    var waitingForKey = 0;\r\n    var waitingForKeyPlayer = 0;\r\n\r\n    var gamepadButtonName = gamepadButton => {\r\n      if (gamepadButton.type === \"button\") return \"Btn-\" + gamepadButton.code;\r\n      if (gamepadButton.type === \"axis\")\r\n        return \"Axis-\" + gamepadButton.code + \" \" + gamepadButton.value;\r\n    };\r\n\r\n    if (this.props.gamepadConfig && this.props.gamepadConfig.playerGamepadId) {\r\n      const playerGamepadId = this.props.gamepadConfig.playerGamepadId;\r\n      if (playerGamepadId[0]) {\r\n        playerButtons[0] = \"\";\r\n        gamepadButton = searchButton(\r\n          this.props.gamepadConfig.configs[playerGamepadId[0]],\r\n          button\r\n        );\r\n        newButton = searchNewButton(\r\n          prevProps.gamepadConfig.configs[playerGamepadId[0]],\r\n          this.props.gamepadConfig.configs[playerGamepadId[0]]\r\n        );\r\n        if (gamepadButton) {\r\n          playerButtons[0] = gamepadButtonName(gamepadButton);\r\n        } else {\r\n          if (newButton && newButton.buttonId === this.props.prevButton) {\r\n            if (!waitingForKey) {\r\n              waitingForKey = 1;\r\n              waitingForKeyPlayer = 1;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (playerGamepadId[1]) {\r\n        playerButtons[1] = \"\";\r\n        gamepadButton = searchButton(\r\n          this.props.gamepadConfig.configs[playerGamepadId[1]],\r\n          button\r\n        );\r\n        newButton = searchNewButton(\r\n          prevProps.gamepadConfig.configs[playerGamepadId[1]],\r\n          this.props.gamepadConfig.configs[playerGamepadId[1]]\r\n        );\r\n        if (gamepadButton) {\r\n          playerButtons[1] = gamepadButtonName(gamepadButton);\r\n        } else {\r\n          if (newButton && newButton.buttonId === this.props.prevButton) {\r\n            if (!waitingForKey) {\r\n              waitingForKey = 2;\r\n              waitingForKeyPlayer = 2;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    var newState = {};\r\n\r\n    if (waitingForKey) {\r\n      this.props.handleClick([waitingForKeyPlayer, this.props.button]);\r\n    }\r\n    // Prevent setState being called repeatedly\r\n    if (\r\n      prevState.playerOneButton !== playerButtons[0] ||\r\n      prevState.playerTwoButton !== playerButtons[1]\r\n    ) {\r\n      newState.playerOneButton = playerButtons[0];\r\n      newState.playerTwoButton = playerButtons[1];\r\n    }\r\n\r\n    if (waitingForKey) {\r\n      newState.waitingForKey = waitingForKey;\r\n    } else if (prevState.waitingForKey === 1) {\r\n      if (this.props.currentPromptButton !== this.props.button) {\r\n        newState.waitingForKey = 0;\r\n      }\r\n    } else if (prevState.waitingForKey === 2) {\r\n      if (this.props.currentPromptButton !== this.props.button) {\r\n        newState.waitingForKey = 0;\r\n      }\r\n    }\r\n\r\n    if (Object.keys(newState).length > 0) {\r\n      this.setState(newState);\r\n    }\r\n  }\r\n\r\n  handleClick(player) {\r\n    this.props.handleClick([player, this.props.button]);\r\n    this.setState({\r\n      waitingForKey: player\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const waitingText = \"按下键盘进行设置...\";\r\n    return (\r\n      <tr>\r\n        <td>{this.props.buttonName}</td>\r\n        <td onClick={() => this.handleClick(1)}>\r\n          {this.state.waitingForKey === 1\r\n            ? waitingText\r\n            : this.state.playerOneButton}\r\n        </td>\r\n        <td onClick={() => this.handleClick(2)}>\r\n          {this.state.waitingForKey === 2\r\n            ? waitingText\r\n            : this.state.playerTwoButton}\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ControlMapperRow;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Table\r\n} from \"reactstrap\";\r\nimport { Controller } from \"jsnes\";\r\nimport ControlMapperRow from \"./ControlMapperRow\";\r\n\r\nconst GAMEPAD_ICON = \"../img/nes_controller.png\";\r\nconst KEYBOARD_ICON = \"../img/keyboard.png\";\r\n\r\nclass ControlsModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      gamepadConfig: props.gamepadConfig,\r\n      keys: props.keys,\r\n      button: undefined,\r\n      modified: false\r\n    };\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    this.handleGamepadButtonDown = this.handleGamepadButtonDown.bind(this);\r\n    this.listenForKey = this.listenForKey.bind(this);\r\n\r\n    this.state.gamepadConfig = this.state.gamepadConfig || {};\r\n    this.state.gamepadConfig.playerGamepadId = this.state.gamepadConfig\r\n      .playerGamepadId || [null, null];\r\n    this.state.gamepadConfig.configs = this.state.gamepadConfig.configs || {};\r\n\r\n    this.state.controllerIcon = this.state.gamepadConfig.playerGamepadId.map(\r\n      gamepadId => (gamepadId ? GAMEPAD_ICON : KEYBOARD_ICON)\r\n    );\r\n    this.state.controllerIconAlt = this.state.gamepadConfig.playerGamepadId.map(\r\n      gamepadId => (gamepadId ? \"gamepad\" : \"keyboard\")\r\n    );\r\n    this.state.currentPromptButton = -1;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.state.modified) {\r\n      this.props.setKeys(this.state.keys);\r\n      this.props.setGamepadConfig(this.state.gamepadConfig);\r\n    }\r\n    this.removeKeyListener();\r\n  }\r\n\r\n  listenForKey(button) {\r\n    var currentPromptButton = button[1];\r\n\r\n    this.removeKeyListener();\r\n    this.setState({ button, currentPromptButton });\r\n    this.props.promptButton(this.handleGamepadButtonDown);\r\n    document.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleGamepadButtonDown(buttonInfo) {\r\n    this.removeKeyListener();\r\n\r\n    var button = this.state.button;\r\n\r\n    const playerId = button[0];\r\n    const buttonId = button[1];\r\n\r\n    const gamepadId = buttonInfo.gamepadId;\r\n    const gamepadConfig = this.state.gamepadConfig;\r\n\r\n    // link player to gamepad\r\n    const playerGamepadId = gamepadConfig.playerGamepadId.slice(0);\r\n    const newConfig = {};\r\n\r\n    playerGamepadId[playerId - 1] = gamepadId;\r\n\r\n    const rejectButtonId = b => {\r\n      return b.buttonId !== buttonId;\r\n    };\r\n\r\n    const newButton = {\r\n      code: buttonInfo.code,\r\n      type: buttonInfo.type,\r\n      buttonId: buttonId,\r\n      value: buttonInfo.value\r\n    };\r\n    newConfig[gamepadId] = {\r\n      buttons: (gamepadConfig.configs[gamepadId] || { buttons: [] }).buttons\r\n        .filter(rejectButtonId)\r\n        .concat([newButton])\r\n    };\r\n\r\n    const configs = Object.assign({}, gamepadConfig.configs, newConfig);\r\n\r\n    this.setState({\r\n      gamepadConfig: {\r\n        configs: configs,\r\n        playerGamepadId: playerGamepadId\r\n      },\r\n      currentPromptButton: -1,\r\n      controllerIcon: playerGamepadId.map(gamepadId =>\r\n        gamepadId ? GAMEPAD_ICON : KEYBOARD_ICON\r\n      ),\r\n      modified: true\r\n    });\r\n  }\r\n\r\n  handleKeyDown(event) {\r\n    this.removeKeyListener();\r\n\r\n    var button = this.state.button;\r\n    var keys = this.state.keys;\r\n    var newKeys = {};\r\n    for (var key in keys) {\r\n      if (keys[key][0] !== button[0] || keys[key][1] !== button[1]) {\r\n        newKeys[key] = keys[key];\r\n      }\r\n    }\r\n\r\n    const playerGamepadId = this.state.gamepadConfig.playerGamepadId.slice(0);\r\n    const playerId = button[0];\r\n    playerGamepadId[playerId - 1] = null;\r\n\r\n    this.setState({\r\n      keys: {\r\n        ...newKeys,\r\n        [event.keyCode]: [\r\n          ...button.slice(0, 2),\r\n          event.key.length > 1 ? event.key : String(event.key).toUpperCase()\r\n        ]\r\n      },\r\n      button: undefined,\r\n      gamepadConfig: {\r\n        configs: this.state.gamepadConfig.configs,\r\n        playerGamepadId: playerGamepadId\r\n      },\r\n      currentPromptButton: -1,\r\n      controllerIcon: playerGamepadId.map(gamepadId =>\r\n        gamepadId ? GAMEPAD_ICON : KEYBOARD_ICON\r\n      ),\r\n      controllerIconAlt: playerGamepadId.map(gamepadId =>\r\n        gamepadId ? \"gamepad\" : \"keyboard\"\r\n      ),\r\n      modified: true\r\n    });\r\n  }\r\n\r\n  removeKeyListener() {\r\n    this.props.promptButton(null);\r\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        isOpen={this.props.isOpen}\r\n        toggle={this.props.toggle}\r\n        className=\"ControlsModal\"\r\n      >\r\n        <ModalHeader toggle={this.props.toggle}>键盘设置</ModalHeader>\r\n        <ModalBody>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>按键</th>\r\n                <th>\r\n                  玩家一\r\n                  <img\r\n                    className=\"controller-icon\"\r\n                    src={this.state.controllerIcon[0]}\r\n                    alt={this.state.controllerIconAlt[0]}\r\n                  />\r\n                </th>\r\n                <th>\r\n                  玩家二\r\n                  <img\r\n                    className=\"controller-icon\"\r\n                    src={this.state.controllerIcon[1]}\r\n                    alt={this.state.controllerIconAlt[1]}\r\n                  />\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <ControlMapperRow\r\n                buttonName=\"←\"\r\n                currentPromptButton={this.state.currentPromptButton}\r\n                button={Controller.BUTTON_LEFT}\r\n                prevButton={Controller.BUTTON_SELECT}\r\n                keys={this.state.keys}\r\n                handleClick={this.listenForKey}\r\n                gamepadConfig={this.state.gamepadConfig}\r\n              />\r\n              <ControlMapperRow\r\n                buttonName=\"→\"\r\n                currentPromptButton={this.state.currentPromptButton}\r\n                button={Controller.BUTTON_RIGHT}\r\n                prevButton={Controller.BUTTON_LEFT}\r\n                keys={this.state.keys}\r\n                handleClick={this.listenForKey}\r\n                gamepadConfig={this.state.gamepadConfig}\r\n              />\r\n              <ControlMapperRow\r\n                buttonName=\"↑\"\r\n                currentPromptButton={this.state.currentPromptButton}\r\n                button={Controller.BUTTON_UP}\r\n                prevButton={Controller.BUTTON_RIGHT}\r\n                keys={this.state.keys}\r\n                handleClick={this.listenForKey}\r\n                gamepadConfig={this.state.gamepadConfig}\r\n              />\r\n              <ControlMapperRow\r\n                buttonName=\"↓\"\r\n                currentPromptButton={this.state.currentPromptButton}\r\n                button={Controller.BUTTON_DOWN}\r\n                prevButton={Controller.BUTTON_UP}\r\n                keys={this.state.keys}\r\n                handleClick={this.listenForKey}\r\n                gamepadConfig={this.state.gamepadConfig}\r\n              />\r\n              <ControlMapperRow\r\n                buttonName=\"A\"\r\n                currentPromptButton={this.state.currentPromptButton}\r\n                button={Controller.BUTTON_A}\r\n                prevButton={Controller.BUTTON_DOWN}\r\n                keys={this.state.keys}\r\n                handleClick={this.listenForKey}\r\n                gamepadConfig={this.state.gamepadConfig}\r\n              />\r\n              <ControlMapperRow\r\n                buttonName=\"B\"\r\n                currentPromptButton={this.state.currentPromptButton}\r\n                button={Controller.BUTTON_B}\r\n                prevButton={Controller.BUTTON_A}\r\n                keys={this.state.keys}\r\n                handleClick={this.listenForKey}\r\n                gamepadConfig={this.state.gamepadConfig}\r\n              />\r\n              <ControlMapperRow\r\n                buttonName=\"开始\"\r\n                currentPromptButton={this.state.currentPromptButton}\r\n                button={Controller.BUTTON_START}\r\n                prevButton={Controller.BUTTON_B}\r\n                keys={this.state.keys}\r\n                handleClick={this.listenForKey}\r\n                gamepadConfig={this.state.gamepadConfig}\r\n              />\r\n              <ControlMapperRow\r\n                buttonName=\"切换\"\r\n                currentPromptButton={this.state.currentPromptButton}\r\n                button={Controller.BUTTON_SELECT}\r\n                prevButton={Controller.BUTTON_START}\r\n                keys={this.state.keys}\r\n                handleClick={this.listenForKey}\r\n                gamepadConfig={this.state.gamepadConfig}\r\n              />\r\n            </tbody>\r\n          </Table>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button outline color=\"primary\" onClick={this.props.toggle}>\r\n            关闭\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ControlsModal;\r\n","const FPS = 60.098;\r\n\r\nexport default class FrameTimer {\r\n  constructor(props) {\r\n    // Run at 60 FPS\r\n    this.onGenerateFrame = props.onGenerateFrame;\r\n    // Run on animation frame\r\n    this.onWriteFrame = props.onWriteFrame;\r\n    this.onAnimationFrame = this.onAnimationFrame.bind(this);\r\n    this.running = true;\r\n    this.interval = 1e3 / FPS;\r\n    this.lastFrameTime = false;\r\n  }\r\n\r\n  start() {\r\n    this.running = true;\r\n    this.requestAnimationFrame();\r\n  }\r\n\r\n  stop() {\r\n    this.running = false;\r\n    if (this._requestID) window.cancelAnimationFrame(this._requestID);\r\n    this.lastFrameTime = false;\r\n  }\r\n\r\n  requestAnimationFrame() {\r\n    this._requestID = window.requestAnimationFrame(this.onAnimationFrame);\r\n  }\r\n\r\n  generateFrame() {\r\n    this.onGenerateFrame();\r\n    this.lastFrameTime += this.interval;\r\n  }\r\n\r\n  onAnimationFrame = time => {\r\n    this.requestAnimationFrame();\r\n    // how many ms after 60fps frame time\r\n    let excess = time % this.interval;\r\n\r\n    // newFrameTime is the current time aligned to 60fps intervals.\r\n    // i.e. 16.6, 33.3, etc ...\r\n    let newFrameTime = time - excess;\r\n\r\n    // first frame, do nothing\r\n    if (!this.lastFrameTime) {\r\n      this.lastFrameTime = newFrameTime;\r\n      return;\r\n    }\r\n\r\n    let numFrames = Math.round(\r\n      (newFrameTime - this.lastFrameTime) / this.interval\r\n    );\r\n\r\n    // This can happen a lot on a 144Hz display\r\n    if (numFrames === 0) {\r\n      //console.log(\"WOAH, no frames\");\r\n      return;\r\n    }\r\n\r\n    // update display on first frame only\r\n    this.generateFrame();\r\n    this.onWriteFrame();\r\n\r\n    // we generate additional frames evenly before the next\r\n    // onAnimationFrame call.\r\n    // additional frames are generated but not displayed\r\n    // until next frame draw\r\n    let timeToNextFrame = this.interval - excess;\r\n    for (let i = 1; i < numFrames; i++) {\r\n      setTimeout(() => {\r\n        this.generateFrame();\r\n      }, (i * timeToNextFrame) / numFrames);\r\n    }\r\n    if (numFrames > 1) console.log(\"SKIP\", numFrames - 1, this.lastFrameTime);\r\n  };\r\n}\r\n","export default class GamepadController {\r\n  constructor(options) {\r\n    this.onButtonDown = options.onButtonDown;\r\n    this.onButtonUp = options.onButtonUp;\r\n    this.gamepadState = [];\r\n    this.buttonCallback = null;\r\n  }\r\n\r\n  disableIfGamepadEnabled = callback => {\r\n    var self = this;\r\n    return (playerId, buttonId) => {\r\n      if (!self.gamepadConfig) {\r\n        return callback(playerId, buttonId);\r\n      }\r\n\r\n      var playerGamepadId = self.gamepadConfig.playerGamepadId;\r\n      if (!playerGamepadId || !playerGamepadId[playerId - 1]) {\r\n        // allow callback only if player is not associated to any gamepad\r\n        return callback(playerId, buttonId);\r\n      }\r\n    };\r\n  };\r\n\r\n  _getPlayerNumberFromGamepad = gamepad => {\r\n    if (this.gamepadConfig.playerGamepadId[0] === gamepad.id) {\r\n      return 1;\r\n    }\r\n\r\n    if (this.gamepadConfig.playerGamepadId[1] === gamepad.id) {\r\n      return 2;\r\n    }\r\n\r\n    return 1;\r\n  };\r\n\r\n  poll = () => {\r\n    const gamepads = navigator.getGamepads\r\n      ? navigator.getGamepads()\r\n      : navigator.webkitGetGamepads();\r\n\r\n    const usedPlayers = [];\r\n\r\n    for (let gamepadIndex = 0; gamepadIndex < gamepads.length; gamepadIndex++) {\r\n      const gamepad = gamepads[gamepadIndex];\r\n      const previousGamepad = this.gamepadState[gamepadIndex];\r\n\r\n      if (!gamepad) {\r\n        continue;\r\n      }\r\n\r\n      if (!previousGamepad) {\r\n        this.gamepadState[gamepadIndex] = gamepad;\r\n        continue;\r\n      }\r\n\r\n      const buttons = gamepad.buttons;\r\n      const previousButtons = previousGamepad.buttons;\r\n\r\n      if (this.buttonCallback) {\r\n        for (let code = 0; code < gamepad.axes.length; code++) {\r\n          const axis = gamepad.axes[code];\r\n          const previousAxis = previousGamepad.axes[code];\r\n\r\n          if (axis === -1 && previousAxis !== -1) {\r\n            this.buttonCallback({\r\n              gamepadId: gamepad.id,\r\n              type: \"axis\",\r\n              code: code,\r\n              value: axis\r\n            });\r\n          }\r\n\r\n          if (axis === 1 && previousAxis !== 1) {\r\n            this.buttonCallback({\r\n              gamepadId: gamepad.id,\r\n              type: \"axis\",\r\n              code: code,\r\n              value: axis\r\n            });\r\n          }\r\n        }\r\n\r\n        for (let code = 0; code < buttons.length; code++) {\r\n          const button = buttons[code];\r\n          const previousButton = previousButtons[code];\r\n          if (button.pressed && !previousButton.pressed) {\r\n            this.buttonCallback({\r\n              gamepadId: gamepad.id,\r\n              type: \"button\",\r\n              code: code\r\n            });\r\n          }\r\n        }\r\n      } else if (this.gamepadConfig) {\r\n        let playerNumber = this._getPlayerNumberFromGamepad(gamepad);\r\n        if (usedPlayers.length < 2) {\r\n          if (usedPlayers.indexOf(playerNumber) !== -1) {\r\n            playerNumber++;\r\n            if (playerNumber > 2) playerNumber = 1;\r\n          }\r\n          usedPlayers.push(playerNumber);\r\n\r\n          if (this.gamepadConfig.configs[gamepad.id]) {\r\n            const configButtons = this.gamepadConfig.configs[gamepad.id]\r\n              .buttons;\r\n\r\n            for (let i = 0; i < configButtons.length; i++) {\r\n              const configButton = configButtons[i];\r\n              if (configButton.type === \"button\") {\r\n                const code = configButton.code;\r\n                const button = buttons[code];\r\n                const previousButton = previousButtons[code];\r\n\r\n                if (button.pressed && !previousButton.pressed) {\r\n                  this.onButtonDown(playerNumber, configButton.buttonId);\r\n                } else if (!button.pressed && previousButton.pressed) {\r\n                  this.onButtonUp(playerNumber, configButton.buttonId);\r\n                }\r\n              } else if (configButton.type === \"axis\") {\r\n                const code = configButton.code;\r\n                const axis = gamepad.axes[code];\r\n                const previousAxis = previousGamepad.axes[code];\r\n\r\n                if (\r\n                  axis === configButton.value &&\r\n                  previousAxis !== configButton.value\r\n                ) {\r\n                  this.onButtonDown(playerNumber, configButton.buttonId);\r\n                }\r\n\r\n                if (\r\n                  axis !== configButton.value &&\r\n                  previousAxis === configButton.value\r\n                ) {\r\n                  this.onButtonUp(playerNumber, configButton.buttonId);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      this.gamepadState[gamepadIndex] = {\r\n        buttons: buttons.map(b => {\r\n          return { pressed: b.pressed };\r\n        }),\r\n        axes: gamepad.axes.slice(0)\r\n      };\r\n    }\r\n  };\r\n\r\n  promptButton = f => {\r\n    if (!f) {\r\n      this.buttonCallback = f;\r\n    } else {\r\n      this.buttonCallback = buttonInfo => {\r\n        this.buttonCallback = null;\r\n        f(buttonInfo);\r\n      };\r\n    }\r\n  };\r\n\r\n  loadGamepadConfig = () => {\r\n    var gamepadConfig;\r\n    try {\r\n      gamepadConfig = localStorage.getItem(\"gamepadConfig\");\r\n      if (gamepadConfig) {\r\n        gamepadConfig = JSON.parse(gamepadConfig);\r\n      }\r\n    } catch (e) {\r\n      console.log(\"Failed to get gamepadConfig from localStorage.\", e);\r\n    }\r\n\r\n    this.gamepadConfig = gamepadConfig;\r\n  };\r\n\r\n  setGamepadConfig = gamepadConfig => {\r\n    try {\r\n      localStorage.setItem(\"gamepadConfig\", JSON.stringify(gamepadConfig));\r\n      this.gamepadConfig = gamepadConfig;\r\n    } catch (e) {\r\n      console.log(\"Failed to set gamepadConfig in localStorage\");\r\n    }\r\n  };\r\n\r\n  startPolling = () => {\r\n    if (!(navigator.getGamepads || navigator.webkitGetGamepads)) {\r\n      return { stop: () => {} };\r\n    }\r\n\r\n    let stopped = false;\r\n    const loop = () => {\r\n      if (stopped) return;\r\n\r\n      this.poll();\r\n      requestAnimationFrame(loop);\r\n    };\r\n    requestAnimationFrame(loop);\r\n\r\n    return {\r\n      stop: () => {\r\n        stopped = true;\r\n      }\r\n    };\r\n  };\r\n}\r\n","import { Controller } from \"jsnes\";\r\n\r\n// Mapping keyboard code to [controller, button]\r\nconst KEYS = {\r\n  75: [1, Controller.BUTTON_A, \"K\"], // 玩家一 A键\r\n  74: [1, Controller.BUTTON_B, \"J\"], // 玩家一 B键\r\n  70: [1, Controller.BUTTON_SELECT, \"F\"], // 玩家一 切换\r\n  72: [1, Controller.BUTTON_START, \"H\"], // 玩家一 开始\r\n  87: [1, Controller.BUTTON_UP, \"W\"], // 玩家一 上\r\n  83: [1, Controller.BUTTON_DOWN, \"S\"], // 玩家一 下\r\n  65: [1, Controller.BUTTON_LEFT, \"A\"], // 玩家一 左\r\n  68: [1, Controller.BUTTON_RIGHT, \"D\"], // 玩家一 右\r\n  13: [2, Controller.BUTTON_A, \"Enter\"], // 玩家二 A键\r\n  99: [2, Controller.BUTTON_B, \"3\"], // 玩家二 B键\r\n  97: [2, Controller.BUTTON_SELECT, \"1\"], // 玩家二 切换\r\n  98: [2, Controller.BUTTON_START, \"2\"], // 玩家二 开始\r\n  38: [2, Controller.BUTTON_UP, \"↑\"], // 玩家二 上\r\n  40: [2, Controller.BUTTON_DOWN, \"↓\"], // 玩家二 下\r\n  37: [2, Controller.BUTTON_LEFT, \"←\"], // 玩家二 左\r\n  39: [2, Controller.BUTTON_RIGHT, \"→\"] // 玩家二 右\r\n};\r\n\r\nexport default class KeyboardController {\r\n  constructor(options) {\r\n    this.onButtonDown = options.onButtonDown;\r\n    this.onButtonUp = options.onButtonUp;\r\n  }\r\n\r\n  loadKeys = () => {\r\n    var keys;\r\n    try {\r\n      keys = localStorage.getItem(\"keys\");\r\n      if (keys) {\r\n        keys = JSON.parse(keys);\r\n      }\r\n    } catch (e) {\r\n      console.log(\"Failed to get keys from localStorage.\", e);\r\n    }\r\n\r\n    this.keys = keys || KEYS;\r\n  };\r\n\r\n  setKeys = newKeys => {\r\n    try {\r\n      localStorage.setItem(\"keys\", JSON.stringify(newKeys));\r\n      this.keys = newKeys;\r\n    } catch (e) {\r\n      console.log(\"Failed to set keys in localStorage\");\r\n    }\r\n  };\r\n\r\n  handleKeyDown = e => {\r\n    var key = this.keys[e.keyCode];\r\n    if (key) {\r\n      this.onButtonDown(key[0], key[1]);\r\n      e.preventDefault();\r\n    }\r\n  };\r\n\r\n  handleKeyUp = e => {\r\n    var key = this.keys[e.keyCode];\r\n    if (key) {\r\n      this.onButtonUp(key[0], key[1]);\r\n      e.preventDefault();\r\n    }\r\n  };\r\n\r\n  handleKeyPress = e => {\r\n    e.preventDefault();\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./Screen.css\";\r\n\r\nconst SCREEN_WIDTH = 256;\r\nconst SCREEN_HEIGHT = 240;\r\n\r\nclass Screen extends Component {\r\n  render() {\r\n    return (\r\n      <canvas\r\n        className=\"Screen\"\r\n        width={SCREEN_WIDTH}\r\n        height={SCREEN_HEIGHT}\r\n        onMouseDown={this.handleMouseDown}\r\n        onMouseUp={this.props.onMouseUp}\r\n        ref={canvas => {\r\n          this.canvas = canvas;\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.initCanvas();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.initCanvas();\r\n  }\r\n\r\n  initCanvas() {\r\n    this.context = this.canvas.getContext(\"2d\");\r\n    this.imageData = this.context.getImageData(\r\n      0,\r\n      0,\r\n      SCREEN_WIDTH,\r\n      SCREEN_HEIGHT\r\n    );\r\n\r\n    this.context.fillStyle = \"black\";\r\n    // set alpha to opaque\r\n    this.context.fillRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);\r\n\r\n    // buffer to write on next animation frame\r\n    this.buf = new ArrayBuffer(this.imageData.data.length);\r\n    // Get the canvas buffer in 8bit and 32bit\r\n    this.buf8 = new Uint8ClampedArray(this.buf);\r\n    this.buf32 = new Uint32Array(this.buf);\r\n\r\n    // Set alpha\r\n    for (var i = 0; i < this.buf32.length; ++i) {\r\n      this.buf32[i] = 0xff000000;\r\n    }\r\n  }\r\n\r\n  setBuffer = buffer => {\r\n    var i = 0;\r\n    for (var y = 0; y < SCREEN_HEIGHT; ++y) {\r\n      for (var x = 0; x < SCREEN_WIDTH; ++x) {\r\n        i = y * 256 + x;\r\n        // Convert pixel from NES BGR to canvas ABGR\r\n        this.buf32[i] = 0xff000000 | buffer[i]; // Full alpha\r\n      }\r\n    }\r\n  };\r\n\r\n  writeBuffer = () => {\r\n    this.imageData.data.set(this.buf8);\r\n    this.context.putImageData(this.imageData, 0, 0);\r\n  };\r\n\r\n  fitInParent = () => {\r\n    let parent = this.canvas.parentNode;\r\n    // @ts-ignore\r\n    let parentWidth = parent.clientWidth;\r\n    // @ts-ignore\r\n    let parentHeight = parent.clientHeight;\r\n    let parentRatio = parentWidth / parentHeight;\r\n    let desiredRatio = SCREEN_WIDTH / SCREEN_HEIGHT;\r\n    if (desiredRatio < parentRatio) {\r\n      this.canvas.style.width = `${Math.round(parentHeight * desiredRatio)}px`;\r\n      this.canvas.style.height = `${parentHeight}px`;\r\n    } else {\r\n      this.canvas.style.width = `${parentWidth}px`;\r\n      this.canvas.style.height = `${Math.round(parentWidth / desiredRatio)}px`;\r\n    }\r\n  };\r\n\r\n  screenshot() {\r\n    var img = new Image();\r\n    img.src = this.canvas.toDataURL(\"image/png\");\r\n    return img;\r\n  }\r\n\r\n  handleMouseDown = e => {\r\n    if (!this.props.onMouseDown) return;\r\n    // Make coordinates unscaled\r\n    let scale = SCREEN_WIDTH / parseFloat(this.canvas.style.width);\r\n    let rect = this.canvas.getBoundingClientRect();\r\n    let x = Math.round((e.clientX - rect.left) * scale);\r\n    let y = Math.round((e.clientY - rect.top) * scale);\r\n    this.props.onMouseDown(x, y);\r\n  };\r\n}\r\n\r\nexport default Screen;\r\n","import Raven from \"raven-js\";\r\n\r\nexport const handleError = (error, errorInfo) => {\r\n  console.error(error);\r\n  Raven.captureException(error, { extra: errorInfo });\r\n};\r\n\r\nexport function loadBinary(path, callback, handleProgress) {\r\n  var req = new XMLHttpRequest();\r\n  req.open(\"GET\", path);\r\n  req.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n  req.onload = function() {\r\n    if (this.status === 200) {\r\n      if (req.responseText.match(/^<!doctype html>/i)) {\r\n        // Got HTML back, so it is probably falling back to index.html due to 404\r\n        return callback(new Error(\"Page not found\"));\r\n      }\r\n\r\n      callback(null, this.responseText);\r\n    } else if (this.status === 0) {\r\n      // Aborted, so ignore error\r\n    } else {\r\n      callback(new Error(req.statusText));\r\n    }\r\n  };\r\n  req.onerror = function() {\r\n    callback(new Error(req.statusText));\r\n  };\r\n  req.onprogress = handleProgress;\r\n  req.send();\r\n  return req;\r\n}\r\n","import RingBuffer from \"ringbufferjs\";\r\nimport { handleError } from \"./utils\";\r\n\r\nexport default class Speakers {\r\n  constructor({ onBufferUnderrun }) {\r\n    this.onBufferUnderrun = onBufferUnderrun;\r\n    this.bufferSize = 8192;\r\n    this.buffer = new RingBuffer(this.bufferSize * 2);\r\n  }\r\n\r\n  getSampleRate() {\r\n    if (!window.AudioContext) {\r\n      return 44100;\r\n    }\r\n    let myCtx = new window.AudioContext();\r\n    let sampleRate = myCtx.sampleRate;\r\n    myCtx.close();\r\n    return sampleRate;\r\n  }\r\n\r\n  start() {\r\n    // Audio is not supported\r\n    if (!window.AudioContext) {\r\n      return;\r\n    }\r\n    this.audioCtx = new window.AudioContext();\r\n    this.scriptNode = this.audioCtx.createScriptProcessor(1024, 0, 2);\r\n    this.scriptNode.onaudioprocess = this.onaudioprocess;\r\n    this.scriptNode.connect(this.audioCtx.destination);\r\n  }\r\n\r\n  stop() {\r\n    if (this.scriptNode) {\r\n      this.scriptNode.disconnect(this.audioCtx.destination);\r\n      this.scriptNode.onaudioprocess = null;\r\n      this.scriptNode = null;\r\n    }\r\n    if (this.audioCtx) {\r\n      this.audioCtx.close().catch(handleError);\r\n      this.audioCtx = null;\r\n    }\r\n  }\r\n\r\n  writeSample = (left, right) => {\r\n    if (this.buffer.size() / 2 >= this.bufferSize) {\r\n      console.log(`Buffer overrun`);\r\n      this.buffer.deqN(this.bufferSize / 2);\r\n    }\r\n    this.buffer.enq(left);\r\n    this.buffer.enq(right);\r\n  };\r\n\r\n  onaudioprocess = e => {\r\n    var left = e.outputBuffer.getChannelData(0);\r\n    var right = e.outputBuffer.getChannelData(1);\r\n    var size = left.length;\r\n\r\n    // We're going to buffer underrun. Attempt to fill the buffer.\r\n    if (this.buffer.size() < size * 2 && this.onBufferUnderrun) {\r\n      this.onBufferUnderrun(this.buffer.size(), size * 2);\r\n    }\r\n\r\n    try {\r\n      var samples = this.buffer.deqN(size * 2);\r\n    } catch (e) {\r\n      // onBufferUnderrun failed to fill the buffer, so handle a real buffer\r\n      // underrun\r\n\r\n      // ignore empty buffers... assume audio has just stopped\r\n      var bufferSize = this.buffer.size() / 2;\r\n      if (bufferSize > 0) {\r\n        console.log(`Buffer underrun (needed ${size}, got ${bufferSize})`);\r\n      }\r\n      for (var j = 0; j < size; j++) {\r\n        left[j] = 0;\r\n        right[j] = 0;\r\n      }\r\n      return;\r\n    }\r\n    for (var i = 0; i < size; i++) {\r\n      left[i] = samples[i * 2];\r\n      right[i] = samples[i * 2 + 1];\r\n    }\r\n  };\r\n}\r\n","import Raven from \"raven-js\";\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { NES } from \"jsnes\";\r\n\r\nimport FrameTimer from \"./FrameTimer\";\r\nimport GamepadController from \"./GamepadController\";\r\nimport KeyboardController from \"./KeyboardController\";\r\nimport Screen from \"./Screen\";\r\nimport Speakers from \"./Speakers\";\r\n\r\n/*\r\n * Runs the emulator.\r\n *\r\n * The only UI is a canvas element. It assumes it is a singleton in various ways\r\n * (binds to window, keyboard, speakers, etc).\r\n */\r\nclass Emulator extends Component {\r\n  render() {\r\n    return (\r\n      <Screen\r\n        ref={screen => {\r\n          this.screen = screen;\r\n        }}\r\n        onGenerateFrame={() => {\r\n          this.nes.frame();\r\n        }}\r\n        onMouseDown={(x, y) => {\r\n          this.nes.zapperMove(x, y);\r\n          this.nes.zapperFireDown();\r\n        }}\r\n        onMouseUp={() => {\r\n          this.nes.zapperFireUp();\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Initial layout\r\n    this.fitInParent();\r\n\r\n    this.speakers = new Speakers({\r\n      onBufferUnderrun: (actualSize, desiredSize) => {\r\n        if (this.props.paused) {\r\n          return;\r\n        }\r\n        // Skip a video frame so audio remains consistent. This happens for\r\n        // a variety of reasons:\r\n        // - Frame rate is not quite 60fps, so sometimes buffer empties\r\n        // - Page is not visible, so requestAnimationFrame doesn't get fired.\r\n        //   In this case emulator still runs at full speed, but timing is\r\n        //   done by audio instead of requestAnimationFrame.\r\n        // - System can't run emulator at full speed. In this case it'll stop\r\n        //    firing requestAnimationFrame.\r\n        console.log(\r\n          \"Buffer underrun, running another frame to try and catch up\"\r\n        );\r\n\r\n        this.frameTimer.generateFrame();\r\n        // desiredSize will be 2048, and the NES produces 1468 samples on each\r\n        // frame so we might need a second frame to be run. Give up after that\r\n        // though -- the system is not catching up\r\n        if (this.speakers.buffer.size() < desiredSize) {\r\n          console.log(\"Still buffer underrun, running a second frame\");\r\n          this.frameTimer.generateFrame();\r\n        }\r\n      }\r\n    });\r\n\r\n    this.nes = new NES({\r\n      onFrame: this.screen.setBuffer,\r\n      onStatusUpdate: console.log,\r\n      onAudioSample: this.speakers.writeSample,\r\n      sampleRate: this.speakers.getSampleRate()\r\n    });\r\n\r\n    // For debugging. ([\"nes\"] instead of .nes to avoid VS Code type errors.)\r\n    window[\"nes\"] = this.nes;\r\n\r\n    this.frameTimer = new FrameTimer({\r\n      onGenerateFrame: Raven.wrap(this.nes.frame),\r\n      onWriteFrame: Raven.wrap(this.screen.writeBuffer)\r\n    });\r\n\r\n    // Set up gamepad and keyboard\r\n    this.gamepadController = new GamepadController({\r\n      onButtonDown: this.nes.buttonDown,\r\n      onButtonUp: this.nes.buttonUp\r\n    });\r\n\r\n    this.gamepadController.loadGamepadConfig();\r\n    this.gamepadPolling = this.gamepadController.startPolling();\r\n\r\n    this.keyboardController = new KeyboardController({\r\n      onButtonDown: this.gamepadController.disableIfGamepadEnabled(\r\n        this.nes.buttonDown\r\n      ),\r\n      onButtonUp: this.gamepadController.disableIfGamepadEnabled(\r\n        this.nes.buttonUp\r\n      )\r\n    });\r\n\r\n    // Load keys from localStorage (if they exist)\r\n    this.keyboardController.loadKeys();\r\n\r\n    document.addEventListener(\"keydown\", this.keyboardController.handleKeyDown);\r\n    document.addEventListener(\"keyup\", this.keyboardController.handleKeyUp);\r\n    document.addEventListener(\r\n      \"keypress\",\r\n      this.keyboardController.handleKeyPress\r\n    );\r\n\r\n    this.nes.loadROM(this.props.romData);\r\n    this.start();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.stop();\r\n\r\n    // Unbind keyboard\r\n    document.removeEventListener(\r\n      \"keydown\",\r\n      this.keyboardController.handleKeyDown\r\n    );\r\n    document.removeEventListener(\"keyup\", this.keyboardController.handleKeyUp);\r\n    document.removeEventListener(\r\n      \"keypress\",\r\n      this.keyboardController.handleKeyPress\r\n    );\r\n\r\n    // Stop gamepad\r\n    this.gamepadPolling.stop();\r\n\r\n    window[\"nes\"] = undefined;\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.paused !== prevProps.paused) {\r\n      if (this.props.paused) {\r\n        this.stop();\r\n      } else {\r\n        this.start();\r\n      }\r\n    }\r\n\r\n    // TODO: handle changing romData\r\n  }\r\n\r\n  start = () => {\r\n    this.frameTimer.start();\r\n    this.speakers.start();\r\n    this.fpsInterval = setInterval(() => {\r\n      console.log(`FPS: ${this.nes.getFPS()}`);\r\n    }, 1000);\r\n  };\r\n\r\n  stop = () => {\r\n    this.frameTimer.stop();\r\n    this.speakers.stop();\r\n    clearInterval(this.fpsInterval);\r\n  };\r\n\r\n  /*\r\n   * Fill parent element with screen. Typically called if parent element changes size.\r\n   */\r\n  fitInParent() {\r\n    this.screen.fitInParent();\r\n  }\r\n}\r\n\r\nEmulator.propTypes = {\r\n  paused: PropTypes.bool,\r\n  romData: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Emulator;\r\n","import React, { Component } from \"react\";\r\nimport { Button, Progress } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport config from \"./config\";\r\nimport ControlsModal from \"./ControlsModal\";\r\nimport Emulator from \"./Emulator\";\r\nimport RomLibrary from \"./RomLibrary\";\r\nimport { loadBinary } from \"./utils\";\r\n\r\nimport \"./RunPage.css\";\r\n\r\n/*\r\n * The UI for the emulator. Also responsible for loading ROM from URL or file.\r\n */\r\nclass RunPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      romName: null,\r\n      romData: null,\r\n      running: false,\r\n      paused: false,\r\n      controlsModalOpen: false,\r\n      loading: true,\r\n      loadedPercent: 3,\r\n      error: null\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"RunPage\">\r\n        <nav\r\n          className=\"navbar navbar-expand\"\r\n          ref={el => {\r\n            this.navbar = el;\r\n          }}\r\n        >\r\n          <ul className=\"navbar-nav\" style={{ width: \"200px\" }}>\r\n            <li className=\"navitem\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                &lsaquo; 返回\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <ul className=\"navbar-nav ml-auto mr-auto\">\r\n            <li className=\"navitem\">\r\n              <span className=\"navbar-text mr-3\">{this.state.romName}</span>\r\n            </li>\r\n          </ul>\r\n          <ul className=\"navbar-nav\" style={{ width: \"200px\" }}>\r\n            <li className=\"navitem\">\r\n              <Button\r\n                outline\r\n                color=\"primary\"\r\n                onClick={this.toggleControlsModal}\r\n                className=\"mr-3\"\r\n              >\r\n                键盘设置\r\n              </Button>\r\n              <Button\r\n                outline\r\n                color=\"primary\"\r\n                onClick={this.handlePauseResume}\r\n                disabled={!this.state.running}\r\n              >\r\n                {this.state.paused ? \"恢复\" : \"暂停\"}\r\n              </Button>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n\r\n        {this.state.error ? (\r\n          this.state.error\r\n        ) : (\r\n          <div\r\n            className=\"screen-container\"\r\n            ref={el => {\r\n              this.screenContainer = el;\r\n            }}\r\n          >\r\n            {this.state.loading ? (\r\n              <Progress\r\n                value={this.state.loadedPercent}\r\n                style={{\r\n                  position: \"absolute\",\r\n                  width: \"70%\",\r\n                  left: \"15%\",\r\n                  top: \"48%\"\r\n                }}\r\n              />\r\n            ) : this.state.romData ? (\r\n              <Emulator\r\n                romData={this.state.romData}\r\n                paused={this.state.paused}\r\n                ref={emulator => {\r\n                  this.emulator = emulator;\r\n                }}\r\n              />\r\n            ) : null}\r\n\r\n            {/* TODO: lift keyboard and gamepad state up */}\r\n            {this.state.controlsModalOpen && (\r\n              <ControlsModal\r\n                isOpen={this.state.controlsModalOpen}\r\n                toggle={this.toggleControlsModal}\r\n                keys={this.emulator.keyboardController.keys}\r\n                setKeys={this.emulator.keyboardController.setKeys}\r\n                promptButton={this.emulator.gamepadController.promptButton}\r\n                gamepadConfig={this.emulator.gamepadController.gamepadConfig}\r\n                setGamepadConfig={\r\n                  this.emulator.gamepadController.setGamepadConfig\r\n                }\r\n              />\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.layout);\r\n    this.layout();\r\n    this.load();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.layout);\r\n    if (this.currentRequest) {\r\n      this.currentRequest.abort();\r\n    }\r\n  }\r\n\r\n  load = () => {\r\n    if (this.props.match.params.slug) {\r\n      const slug = this.props.match.params.slug;\r\n      const isLocalROM = /^local-/.test(slug);\r\n      const romHash = slug.split(\"-\")[1];\r\n      const romInfo = isLocalROM\r\n        ? RomLibrary.getRomInfoByHash(romHash)\r\n        : config.ROMS[slug];\r\n\r\n      if (!romInfo) {\r\n        this.setState({ error: `No such ROM: ${slug}` });\r\n        return;\r\n      }\r\n\r\n      if (isLocalROM) {\r\n        this.setState({ romName: romInfo.name });\r\n        const localROMData = localStorage.getItem(\"blob-\" + romHash);\r\n        this.handleLoaded(localROMData);\r\n      } else {\r\n        this.setState({ romName: romInfo.description });\r\n        this.currentRequest = loadBinary(\r\n          romInfo.url,\r\n          (err, data) => {\r\n            if (err) {\r\n              this.setState({ error: `Error loading ROM: ${err.message}` });\r\n            } else {\r\n              this.handleLoaded(data);\r\n            }\r\n          },\r\n          this.handleProgress\r\n        );\r\n      }\r\n    } else if (this.props.location.state && this.props.location.state.file) {\r\n      let reader = new FileReader();\r\n      reader.readAsBinaryString(this.props.location.state.file);\r\n      reader.onload = e => {\r\n        this.currentRequest = null;\r\n        this.handleLoaded(reader.result);\r\n      };\r\n    } else {\r\n      this.setState({ error: \"No ROM provided\" });\r\n    }\r\n  };\r\n\r\n  handleProgress = e => {\r\n    if (e.lengthComputable) {\r\n      this.setState({ loadedPercent: (e.loaded / e.total) * 100 });\r\n    }\r\n  };\r\n\r\n  handleLoaded = data => {\r\n    this.setState({ running: true, loading: false, romData: data });\r\n  };\r\n\r\n  handlePauseResume = () => {\r\n    this.setState({ paused: !this.state.paused });\r\n  };\r\n\r\n  layout = () => {\r\n    let navbarHeight = parseFloat(window.getComputedStyle(this.navbar).height);\r\n    this.screenContainer.style.height = `${window.innerHeight -\r\n      navbarHeight}px`;\r\n    if (this.emulator) {\r\n      this.emulator.fitInParent();\r\n    }\r\n  };\r\n\r\n  toggleControlsModal = () => {\r\n    this.setState({ controlsModalOpen: !this.state.controlsModalOpen });\r\n  };\r\n}\r\n\r\nexport default RunPage;\r\n","import React, { Component } from \"react\";\r\nimport GoogleAnalytics from \"react-ga\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport ListPage from \"./ListPage\";\r\nimport RunPage from \"./RunPage\";\r\nimport config from \"./config\";\r\nimport { handleError } from \"./utils\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { error: null };\r\n    if (config.GOOGLE_ANALYTICS_CODE) {\r\n      GoogleAnalytics.initialize(config.GOOGLE_ANALYTICS_CODE);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return (\r\n        <div className=\"container my-4\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-md-8\">\r\n              Oops - there has been an error. It has been logged to the console.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <Route exact path=\"/\" component={ListPage} />\r\n          <Route exact path=\"/run\" component={RunPage} />\r\n          <Route exact path=\"/run/:slug\" component={RunPage} />\r\n          <Route path=\"/\" render={this.recordPageview} />\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    this.setState({ error });\r\n    handleError(error, errorInfo);\r\n  }\r\n\r\n  recordPageview = ({ location }) => {\r\n    GoogleAnalytics.pageview(location.pathname);\r\n    return null;\r\n  };\r\n}\r\n\r\nexport default App;\r\n","import Raven from \"raven-js\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport config from \"./config\";\r\nimport \"./index.scss\";\r\n\r\nif (config.SENTRY_URI) {\r\n  Raven.config(config.SENTRY_URI).install();\r\n}\r\n\r\nRaven.context(function() {\r\n  ReactDOM.render(<App />, document.getElementById(\"root\"));\r\n});\r\n"],"sourceRoot":""}